name: Build and Test

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: "3.25"

      - name: Cache system dependencies
        uses: actions/cache@v3
        with:
          path: |
            /usr/bin/lcov
            /usr/bin/doxygen
            /usr/bin/graphviz
          key: system-deps-${{ runner.os }}-v1

      - name: Install system dependencies
        run: |
          # Remove man-db to avoid slow trigger updates
          sudo apt-get remove -y --purge man-db || true
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends lcov doxygen graphviz

      - name: Cache CMake dependencies
        uses: actions/cache@v3
        with:
          path: |
            build/_deps
            ~/.cmake
          key: cmake-deps-${{ runner.os }}-${{ hashFiles('cmake/dependencies.cmake') }}
          restore-keys: |
            cmake-deps-${{ runner.os }}-

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            build/CMakeFiles
            build/lib
            build/src
            build/test/CMakeFiles
            build/cmake_install.cmake
            build/Makefile
            build/*.vcxproj*
          key: cmake-build-${{ runner.os }}-${{ hashFiles('CMakeLists.txt', 'src/**', 'cmake/**', 'test/**') }}
          restore-keys: |
            cmake-build-${{ runner.os }}-

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build project
        run: |
          cd build
          cmake --build . --config Release --parallel $(nproc)

      - name: Generate documentation
        run: |
          cd build
          cmake --build . --target docs

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/MyApp
            build/docs/
            build/compile_commands.json
          retention-days: 7

      - name: Upload test executable and dependencies
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            build/test/test
            build/_deps/**/*.so*
            build/lib/**/*.so*
            build/src/**/*.so*
          retention-days: 7

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-artifacts
          path: build/

      - name: Make test executable
        run: |
          chmod +x build/test/test

      - name: Run tests
        run: |
          cd build
          ./test/test --gtest_output=xml:test_results.xml --gtest_brief=1

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            build/test_results.xml
          retention-days: 7
